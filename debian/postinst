#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        CONF=/etc/nntsc/nntsc.conf

        # ensure the cuz system user exists
        if ! getent passwd cuz > /dev/null; then
            adduser --quiet --system --group --no-create-home cuz
        fi

        # ensure the cuz database user exists
        su postgres -c "psql -tAc \"SELECT 1 FROM pg_roles WHERE rolname='cuz'\" | grep -q 1 || createuser cuz"

        # ensure the nntsc database exists
        su postgres -c "psql --list | cut -d ' ' -f 2 | grep -qx nntsc || \
            createdb -O cuz nntsc"

        # ensure the influx database exists
        influx -execute "show databases" | grep -qx nntsc || \
            influx -execute "CREATE DATABASE nntsc"

        # apply the schema and config to the nntsc database
        su cuz -s /bin/bash -c "build_nntsc_db -C $CONF"

        # ensure the nntsc rabbitmq user exists and the password matches the
        # configuration file
        PASSWD=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1`
        /usr/sbin/rabbitmqctl list_users | cut -f 1 | grep -qx nntsc || \
            (/usr/sbin/rabbitmqctl add_user nntsc $PASSWD && \
             sudo rabbitmqctl set_permissions nntsc ".*" ".*" ".*" && \
             sed -i "s/username = guest/username = nntsc/" $CONF && \
             sed -i "s/password = guest/password = $PASSWD/" $CONF)

        if [ `lsb_release -c -s` = "wheezy" ]; then
            echo "============================================================"
            echo "Debian has old python packages, if you haven't already:"
            echo
            echo "pip install influxdb"
            echo "pip install --upgrade pika"
            echo "============================================================"
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

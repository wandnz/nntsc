#!/usr/bin/env python

import sys, getopt, socket, time, os, imp

from libnntsc.database import Database
from libnntsc.configurator import *
from libnntsc.importer import import_parsers
from libnntsc.parsers.rrd import insert_rrd_streams


def print_usage(prog):
    print "Usage for %s" % (prog)
    print
    print "Available options:"
    print "   -C <filename> "
    print "          Specifies the location of the configuration file"
    print "   -F "
    print "          Wipe and rebuild the database"
    print "          WARNING: all time series data will be lost"
    print "   -h "
    print "          Display this usage test"
    print
    sys.exit(0)

clean_db = False
disabled = []

opts, rest = getopt.getopt(sys.argv[1:],'D:C:Fh')

for o,a in opts:
    if o == "-D":
        disabled.append(a)
    if o == '-C':
        conf_fname = a
    if o == '-F':
        clean_db = True
    if o == '-h':
        print_usage(sys.argv[0])

nntsc_conf = load_nntsc_config(conf_fname)
if nntsc_conf == 0:
    sys.exit(1)

dbconf = get_nntsc_db_config(nntsc_conf)
if dbconf == {}:
    sys.exit(1)

modules = import_parsers(disabled)

if dbconf["name"] == "":
    print >> sys.stderr, "No database name specified in the config file. Please edit your config file (%s)" % (conf_fname)
    sys.exit(1)

db = Database(dbconf["name"], dbconf["user"], dbconf["pass"], dbconf["host"])
db.build_databases(modules, new=clean_db)

if 'rrd' not in disabled:

    rrd_conf = get_nntsc_config(nntsc_conf, 'rrd', 'rrdlist')
    if rrd_conf == "NNTSCConfigError":
        sys.exit(1)
    insert_rrd_streams(db, rrd_conf)


# vim: set sw=4 tabstop=4 softtabstop=4 expandtab :

